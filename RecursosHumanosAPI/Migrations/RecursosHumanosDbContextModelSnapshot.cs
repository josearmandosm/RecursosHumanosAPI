// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecursosHumanosAPI.Models;

#nullable disable

namespace RecursosHumanosAPI.Migrations
{
    [DbContext(typeof(RecursosHumanosDbContext))]
    partial class RecursosHumanosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecursosHumanosAPI.Models.Beneficio", b =>
                {
                    b.Property<int>("BeneficioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BeneficioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficioId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("BeneficioId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Beneficio", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Capacitacion", b =>
                {
                    b.Property<int>("CapacitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CapacitacionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapacitacionId"));

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CapacitacionId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Capacitacion", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartamentoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int")
                        .HasColumnName("DepartamentoId");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PuestoId")
                        .HasColumnType("int")
                        .HasColumnName("PuestoId");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("PuestoId");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Evaluacion", b =>
                {
                    b.Property<int>("EvaluacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EvaluacionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluacionId"));

                    b.Property<string>("Comentarios")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<DateOnly>("FechaEvaluacion")
                        .HasColumnType("date");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("EvaluacionId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Evaluacion", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Nomina", b =>
                {
                    b.Property<int>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NominaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NominaId"));

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("date");

                    b.Property<decimal>("Impuestos")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Impuestos");

                    b.Property<decimal>("SalarioBruto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("SalarioBruto");

                    b.Property<decimal>("SalarioNeto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("SalarioNeto");

                    b.HasKey("NominaId");

                    b.HasIndex("EmpleadoId")
                        .IsUnique()
                        .HasFilter("[EmpleadoId] IS NOT NULL");

                    b.ToTable("Nomina", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Puesto", b =>
                {
                    b.Property<int>("PuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PuestoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PuestoId"));

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Salario");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PuestoId");

                    b.ToTable("Puesto", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Vacacion", b =>
                {
                    b.Property<int>("VacacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VacacionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacacionId"));

                    b.Property<bool>("Aprobado")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.HasKey("VacacionId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Vacacion", (string)null);
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Beneficio", b =>
                {
                    b.HasOne("RecursosHumanosAPI.Models.Empleado", "Empleado")
                        .WithMany("Beneficios")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Beneficio__Emple__3E52440B");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Capacitacion", b =>
                {
                    b.HasOne("RecursosHumanosAPI.Models.Empleado", "Empleado")
                        .WithMany("Capacitacions")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Capacitac__Emple__3C34F16F");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Empleado", b =>
                {
                    b.HasOne("RecursosHumanosAPI.Models.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoId")
                        .HasConstraintName("FK__Empleado__Depart__398D8EEE");

                    b.HasOne("RecursosHumanosAPI.Models.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoId")
                        .HasConstraintName("FK__Empleado__Puesto__38996AB5");

                    b.Navigation("Departamento");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Evaluacion", b =>
                {
                    b.HasOne("RecursosHumanosAPI.Models.Empleado", "Empleado")
                        .WithMany("Evaluacions")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Evaluacio__Emple__3D5E1FD2");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Nomina", b =>
                {
                    b.HasOne("RecursosHumanosAPI.Models.Empleado", "Empleado")
                        .WithOne("Nomina")
                        .HasForeignKey("RecursosHumanosAPI.Models.Nomina", "EmpleadoId")
                        .HasConstraintName("FK__Nomina__Empleado__3F466844");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Vacacion", b =>
                {
                    b.HasOne("RecursosHumanosAPI.Models.Empleado", "Empleado")
                        .WithMany("Vacacions")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK__Vacacion__Emplea__3A4CA8FD");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Empleado", b =>
                {
                    b.Navigation("Beneficios");

                    b.Navigation("Capacitacions");

                    b.Navigation("Evaluacions");

                    b.Navigation("Nomina");

                    b.Navigation("Vacacions");
                });

            modelBuilder.Entity("RecursosHumanosAPI.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
